name: 'Auth Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: 'Auth Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: 'Register the new user and return its access token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user. Must not be greater than 255 characters.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address of the user. Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password for the user account (min 8 characters). Must be at least 8 characters.'
        required: true
        example: secret-password
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Password confirmation that must match the password.'
        required: true
        example: secret-password
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@example.com
      password: secret-password
      password_confirmation: secret-password
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":153,"name":"Ms. Audra Crooks II","email":"gulgowski.asia@example.com","email_verified_at":"2025-05-13T20:41:27.000000Z","created_at":"2025-05-13T20:41:27.000000Z","updated_at":"2025-05-13T20:41:27.000000Z"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: 'Auth Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Log the user in and return its access token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address of the user. Must be a valid email address. The <code>email</code> of an existing record in the users table.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password for the user account (min 8 characters). Must be at least 8 characters.'
        required: true
        example: secret-password
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john@example.com
      password: secret-password
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":154,"name":"Ms. Audra Crooks II","email":"idickens@example.org","email_verified_at":"2025-05-13T20:41:27.000000Z","created_at":"2025-05-13T20:41:27.000000Z","updated_at":"2025-05-13T20:41:27.000000Z"}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: 'Auth Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Logout
      description: "Returns a list of the current user's todos."
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message" : "Logged out"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
